// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

// one to one relationship
model User {
    id      Int      @id @default(autoincrement())
    name    String
    profile Profile? //user can have only one profile or none
}

model Profile {
    id       Int    @id @default(autoincrement())
    username String
    bio      String

    user   User @relation(fields: [userId], references: [id])
    userId Int  @unique // relation scalar field (used in the `@relation` attribute above)
    // a user can have almost one profile this implies one to one realtion
}

//one to many relationship
model User2 {
    id    Int    @id @default(autoincrement())
    name  String
    posts Post[] // this is array of post , implies one to many realtion
    //user can have more the one post
}

model Post {
    id       Int    @id @default(autoincrement())
    text     String
    author   User2  @relation(fields: [authorId], references: [id])
    authorId Int // authorId is not unique , implies one to many relation
}

// Many-to-many relations

model Tweet {
    id         Int                  @id @default(autoincrement())
    title      String
    categories CategoriesOnTweets[]
}

model Category {
    id    Int                  @id @default(autoincrement())
    name  String
    tweet CategoriesOnTweets[]
}

model CategoriesOnTweets {
    tweet      Tweet    @relation(fields: [tweetId], references: [id])
    tweetId    Int // relation scalar field (used in the `@relation` attribute above)
    category   Category @relation(fields: [categoryId], references: [id])
    categoryId Int // relation scalar field (used in the `@relation` attribute above)
    assignedAt DateTime @default(now())
    assignedBy String

    @@id([tweetId, categoryId])
}
